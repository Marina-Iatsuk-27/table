{
    "sourceFile": "table.html",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 11,
            "patches": [
                {
                    "date": 1720080864985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1720080870705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,44 +52,10 @@\n     { headerName: 'Размер', field: 'size' },\n     { headerName: 'Заказы 1м', field: 'orders1m' },\n     { headerName: 'Заказы 14 д', field: 'orders14d' },\n     { headerName: 'График продаж', field: 'salesGraph' },\n-    {\n-        headerName: 'Остаток (шт)',\n-        field: 'stock',\n-        cellStyle: function(params) {\n-            if (params.value >= 0 && params.value <= 1.99) {\n-                return { backgroundColor: 'red' }; // красный цвет\n-            } else if (params.value >= 2 && params.value <= 5.99) {\n-                return { backgroundColor: 'orange' }; // оранжевый цвет\n-            } else if (params.value >= 6 && params.value <= 10.99) {\n-                return { backgroundColor: 'lightyellow' }; // светло-желтый цвет\n-            } else if (params.value >= 11) {\n-                return { backgroundColor: 'green' }; // зеленый цвет\n-            } else {\n-                return null; // стандартный стиль\n-            }\n-        }\n-    },\n-    {\n-        headerName: 'Остаток (дн)',\n-        field: 'stockDays',\n-        cellRenderer: function(params) {\n-            const value = params.value;\n-            let className = '';\n-            if (value >= 0 && value <= 1.99) {\n-                className = 'red-text';\n-            } else if (value >= 2 && value <= 5.99) {\n-                className = 'orange-text';\n-            } else if (value >= 6 && value <= 10.99) {\n-                className = 'yellow-text';\n-            } else if (value >= 11) {\n-                className = 'green-text';\n-            }\n-\n-            return `<span class=\"${className}\">${value}</span>`;\n-        }\n-    }\n+    { headerName: 'Остаток (шт)', field: 'stock' },\n+    { headerName: 'Остаток (дн)', field: 'stockDays' },\n     { headerName: 'Пополнить (шт)', field: 'replenish' },\n     { headerName: 'Артикул', field: 'vendorCode' }\n ];\n \n"
                },
                {
                    "date": 1720080878684,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,9 +100,9 @@\n     data.forEach(item => {\n         item.allowed_sizes.forEach(size => {\n             let stock = item.stocks ? item.stocks[size] || 0 : 0;\n             let orders1m = item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0;\n-            let stockDays = orders1m !== 0 ? parseFloat((stock / orders1m).toFixed(2)) : 0;\n+            \n             console.log(typeof(stockDays));\n \n             transformedData.push({\n                 photo: item.photos ? item.photos[0] || '' : '',\n"
                },
                {
                    "date": 1720080885137,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -100,10 +100,10 @@\n     data.forEach(item => {\n         item.allowed_sizes.forEach(size => {\n             let stock = item.stocks ? item.stocks[size] || 0 : 0;\n             let orders1m = item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0;\n+            let stockDays = orders1m !== 0 ? (stock / orders1m).toFixed(2) : 0; \n             \n-            console.log(typeof(stockDays));\n \n             transformedData.push({\n                 photo: item.photos ? item.photos[0] || '' : '',\n                 subjectName: item.subjectName,\n"
                },
                {
                    "date": 1720080894196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,152 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n+    <title>Document</title>\n+    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/styles/ag-grid.css\">\n+    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/styles/ag-theme-alpine.css\">\n+    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css\" rel=\"stylesheet\">\n+    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.0/jquery.min.js\"></script>\n+    <script src=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/core/dist/ag-grid-community.noStyle.js\"></script>\n+    <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js\"></script>\n+  \n+    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n+    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n+    <style>\n+        img{\n+            height: 100%;\n+            padding: 2%;\n+        }\n+    </style>\n+</head>\n+<body>\n+    <div class=\"table-wrapper\">\n+        <div class=\"headerContainer\">\n+            <div class=\"input-group\">\n+                <input type=\"number\" id=\"daysInput\" class=\"form-control\" placeholder=\"Введите количество дней\"\n+                    aria-label=\"Введите количество дней от 15 до 45\" aria-describedby=\"basic-addon2\" min=\"15\" max=\"45\">\n+                <div class=\"input-group-append\">\n+                    <button class=\"btn btn-outline-secondary calculateReplenishment\" type=\"button\">Рассчитать пополнение (шт)</button>\n+                </div>\n+            </div>\n+            <button class=\"btn btn-outline-secondary deleteModify\" type=\"button\">Показать товар без модификаций</button>\n+            <button class=\"btn btn-outline-secondary reloadData\" type=\"button\">Обновить данные</button>\n+        </div>\n+        <div style=\"margin-bottom: 10px;\">\n+            <button id=\"resetFilters\">Сбросить все фильтры</button>\n+        </div>\n+        <div class=\"table-inner container mt-4\">\n+            <div id=\"myGrid\" class=\"ag-theme-alpine\" style=\"height: 600px; width: 100%;\"></div>\n+            <div id=\"loading\" style=\"display: none;\">Загрузка...</div>\n+        </div>\n+    </div>\n+\n+    <script>\n+     // Определение столбцов и параметров сетки\n+const columnDefs = [\n+    { headerName: '№', valueGetter: 'node.rowIndex + 1', width: 50, sortable: false, filter: false },\n+    { headerName: 'Фото', field: 'photo', cellRenderer: params => `<img src=\"${params.value}\">` },\n+    { headerName: 'Предмет', field: 'subjectName' },\n+    { headerName: 'Номенклатура', field: 'nmID' },\n+    { headerName: 'Размер', field: 'size' },\n+    { headerName: 'Заказы 1м', field: 'orders1m' },\n+    { headerName: 'Заказы 14 д', field: 'orders14d' },\n+    { headerName: 'График продаж', field: 'salesGraph' },\n+    { headerName: 'Остаток (шт)', field: 'stock' },\n+    { headerName: 'Остаток (дн)', field: 'stockDays' },\n+    { headerName: 'Пополнить (шт)', field: 'replenish' },\n+    { headerName: 'Артикул', field: 'vendorCode' }\n+];\n+\n+const localeText = {\n+    // Русификация фильтров\n+    page: 'страница',\n+    more: 'ещё',\n+    to: 'к',\n+    of: 'из',\n+    next: 'следующий',\n+    last: 'последний',\n+    first: 'первый',\n+    previous: 'предыдущий',\n+    loadingOoo: 'Загрузка...',\n+    applyFilter: 'Применить фильтр...',\n+    equals: 'Равно',\n+    notEqual: 'Не равно',\n+    filterOoo: 'Фильтр...',\n+    contains: 'Содержит',\n+    notContains: 'Не содержит',\n+    startsWith: 'Начинается с',\n+    endsWith: 'Заканчивается на',\n+    andCondition: 'И',\n+    orCondition: 'Или'\n+};\n+\n+const gridOptions = {\n+    columnDefs: columnDefs,\n+    defaultColDef: {\n+        sortable: true,\n+        filter: true,\n+        resizable: true\n+    },\n+    rowData: [],\n+    localeText: localeText,\n+    rowHeight: 90 \n+};\n+\n+// Функция для преобразования данных\n+function transformData(data) {\n+    let transformedData = [];\n+    data.forEach(item => {\n+        item.allowed_sizes.forEach(size => {\n+            let stock = item.stocks ? item.stocks[size] || 0 : 0;\n+            let orders1m = item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0;\n+            let stockDays = orders1m !== 0 ? (stock / orders1m).toFixed(2) : 0; \n+\n+            transformedData.push({\n+                photo: item.photos ? item.photos[0] || '' : '',\n+                subjectName: item.subjectName,\n+                nmID: item.nmID,\n+                size: size,\n+                orders1m: orders1m,\n+                orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n+                salesGraph: '',\n+                stock: stock,\n+                stockDays: stockDays,\n+                replenish: '',\n+                vendorCode: item.vendorCode\n+            });\n+        });\n+    });\n+    return transformedData;\n+}\n+\n+\n+// Функция для получения данных\n+function fetchData() {\n+    $.getJSON('data.json', function (response) {\n+        const originalData = response.data;\n+        const rowData = transformData(originalData);\n+        console.log(rowData);\n+        gridOptions.api.applyTransaction({ add: rowData });\n+    }).fail(function () {\n+        console.error('Ошибка при загрузке данных');\n+    });\n+}\n+\n+document.addEventListener('DOMContentLoaded', function () {\n+    const gridDiv = document.querySelector('#myGrid');\n+    new agGrid.Grid(gridDiv, gridOptions);\n+\n+    fetchData();\n+\n+    // Добавление события для кнопки сброса всех фильтров\n+    document.querySelector('#resetFilters').addEventListener('click', function() {\n+        gridOptions.api.setFilterModel(null);\n+    });\n+});\n+\n+\n+    </script>\n+</body>\n+</html>\n"
                },
                {
                    "date": 1720080901725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,31 +98,26 @@\n function transformData(data) {\n     let transformedData = [];\n     data.forEach(item => {\n         item.allowed_sizes.forEach(size => {\n-            let stock = item.stocks ? item.stocks[size] || 0 : 0;\n-            let orders1m = item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0;\n-            let stockDays = orders1m !== 0 ? (stock / orders1m).toFixed(2) : 0; \n-\n             transformedData.push({\n-                photo: item.photos ? item.photos[0] || '' : '',\n+                photo: item.photos ? item.photos[0][\"c516x688\"] : '', // Убедитесь, что добавили поле photos в данные\n                 subjectName: item.subjectName,\n                 nmID: item.nmID,\n                 size: size,\n-                orders1m: orders1m,\n+                orders1m: item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0,\n                 orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n                 salesGraph: '',\n-                stock: stock,\n-                stockDays: stockDays,\n+                stock: item.stocks ? item.stocks[size] || 0 : 0,\n+                stockDays: '',\n                 replenish: '',\n                 vendorCode: item.vendorCode\n             });\n         });\n     });\n     return transformedData;\n }\n \n-\n // Функция для получения данных\n function fetchData() {\n     $.getJSON('data.json', function (response) {\n         const originalData = response.data;\n@@ -149,157 +144,4 @@\n \n     </script>\n </body>\n </html>\n-<!DOCTYPE html>\n-<html lang=\"en\">\n-<head>\n-    <meta charset=\"UTF-8\">\n-    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n-    <title>Document</title>\n-    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/styles/ag-grid.css\">\n-    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/styles/ag-theme-alpine.css\">\n-    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css\" rel=\"stylesheet\">\n-    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.0/jquery.min.js\"></script>\n-    <script src=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/core/dist/ag-grid-community.noStyle.js\"></script>\n-    <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js\"></script>\n-  \n-    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n-    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n-    <style>\n-        img{\n-            height: 100%;\n-            padding: 2%;\n-        }\n-    </style>\n-</head>\n-<body>\n-    <div class=\"table-wrapper\">\n-        <div class=\"headerContainer\">\n-            <div class=\"input-group\">\n-                <input type=\"number\" id=\"daysInput\" class=\"form-control\" placeholder=\"Введите количество дней\"\n-                    aria-label=\"Введите количество дней от 15 до 45\" aria-describedby=\"basic-addon2\" min=\"15\" max=\"45\">\n-                <div class=\"input-group-append\">\n-                    <button class=\"btn btn-outline-secondary calculateReplenishment\" type=\"button\">Рассчитать пополнение (шт)</button>\n-                </div>\n-            </div>\n-            <button class=\"btn btn-outline-secondary deleteModify\" type=\"button\">Показать товар без модификаций</button>\n-            <button class=\"btn btn-outline-secondary reloadData\" type=\"button\">Обновить данные</button>\n-        </div>\n-        <div style=\"margin-bottom: 10px;\">\n-            <button id=\"resetFilters\">Сбросить все фильтры</button>\n-        </div>\n-        <div class=\"table-inner container mt-4\">\n-            <div id=\"myGrid\" class=\"ag-theme-alpine\" style=\"height: 600px; width: 100%;\"></div>\n-            <div id=\"loading\" style=\"display: none;\">Загрузка...</div>\n-        </div>\n-    </div>\n-\n-    <script>\n-     // Определение столбцов и параметров сетки\n-const columnDefs = [\n-    { headerName: '№', valueGetter: 'node.rowIndex + 1', width: 50, sortable: false, filter: false },\n-    { headerName: 'Фото', field: 'photo', cellRenderer: params => `<img src=\"${params.value}\">` },\n-    { headerName: 'Предмет', field: 'subjectName' },\n-    { headerName: 'Номенклатура', field: 'nmID' },\n-    { headerName: 'Размер', field: 'size' },\n-    { headerName: 'Заказы 1м', field: 'orders1m' },\n-    { headerName: 'Заказы 14 д', field: 'orders14d' },\n-    { headerName: 'График продаж', field: 'salesGraph' },\n-    { headerName: 'Остаток (шт)', field: 'stock' },\n-    { headerName: 'Остаток (дн)', field: 'stockDays' },\n-    { headerName: 'Пополнить (шт)', field: 'replenish' },\n-    { headerName: 'Артикул', field: 'vendorCode' }\n-];\n-\n-const localeText = {\n-    // Русификация фильтров\n-    page: 'страница',\n-    more: 'ещё',\n-    to: 'к',\n-    of: 'из',\n-    next: 'следующий',\n-    last: 'последний',\n-    first: 'первый',\n-    previous: 'предыдущий',\n-    loadingOoo: 'Загрузка...',\n-    applyFilter: 'Применить фильтр...',\n-    equals: 'Равно',\n-    notEqual: 'Не равно',\n-    filterOoo: 'Фильтр...',\n-    contains: 'Содержит',\n-    notContains: 'Не содержит',\n-    startsWith: 'Начинается с',\n-    endsWith: 'Заканчивается на',\n-    andCondition: 'И',\n-    orCondition: 'Или'\n-};\n-\n-const gridOptions = {\n-    columnDefs: columnDefs,\n-    defaultColDef: {\n-        sortable: true,\n-        filter: true,\n-        resizable: true\n-    },\n-    rowData: [],\n-    localeText: localeText,\n-    rowHeight: 90 \n-};\n-\n-// Функция для преобразования данных\n-function transformData(data) {\n-    let transformedData = [];\n-    data.forEach(item => {\n-        item.allowed_sizes.forEach(size => {\n-            let stock = item.stocks ? item.stocks[size] || 0 : 0;\n-            let orders1m = item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0;\n-            let stockDays = orders1m !== 0 ? (stock / orders1m).toFixed(2) : 0; \n-            \n-\n-            transformedData.push({\n-                photo: item.photos ? item.photos[0] || '' : '',\n-                subjectName: item.subjectName,\n-                nmID: item.nmID,\n-                size: size,\n-                orders1m: orders1m,\n-                orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n-                salesGraph: '',\n-                stock: stock,\n-                stockDays: stockDays,\n-                replenish: '',\n-                vendorCode: item.vendorCode\n-            });\n-        });\n-    });\n-    return transformedData;\n-}\n-\n-\n-// Функция для получения данных\n-function fetchData() {\n-    $.getJSON('data.json', function (response) {\n-        const originalData = response.data;\n-        const rowData = transformData(originalData);\n-        console.log(rowData);\n-        gridOptions.api.applyTransaction({ add: rowData });\n-    }).fail(function () {\n-        console.error('Ошибка при загрузке данных');\n-    });\n-}\n-\n-document.addEventListener('DOMContentLoaded', function () {\n-    const gridDiv = document.querySelector('#myGrid');\n-    new agGrid.Grid(gridDiv, gridOptions);\n-\n-    fetchData();\n-\n-    // Добавление события для кнопки сброса всех фильтров\n-    document.querySelector('#resetFilters').addEventListener('click', function() {\n-        gridOptions.api.setFilterModel(null);\n-    });\n-});\n-\n-\n-    </script>\n-</body>\n-</html>\n"
                },
                {
                    "date": 1720080918806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,26 +98,31 @@\n function transformData(data) {\n     let transformedData = [];\n     data.forEach(item => {\n         item.allowed_sizes.forEach(size => {\n+            let stock = item.stocks ? item.stocks[size] || 0 : 0;\n+            let orders1m = item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0;\n+            let stockDays = orders1m !== 0 ? (stock / orders1m).toFixed(2) : 0; // Вычисляем stockDays, округляем до двух знаков после запятой\n+\n             transformedData.push({\n-                photo: item.photos ? item.photos[0][\"c516x688\"] : '', // Убедитесь, что добавили поле photos в данные\n+                photo: item.photos ? item.photos[0] || '' : '',\n                 subjectName: item.subjectName,\n                 nmID: item.nmID,\n                 size: size,\n-                orders1m: item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0,\n+                orders1m: orders1m,\n                 orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n                 salesGraph: '',\n-                stock: item.stocks ? item.stocks[size] || 0 : 0,\n-                stockDays: '',\n+                stock: stock,\n+                stockDays: stockDays,\n                 replenish: '',\n                 vendorCode: item.vendorCode\n             });\n         });\n     });\n     return transformedData;\n }\n \n+\n // Функция для получения данных\n function fetchData() {\n     $.getJSON('data.json', function (response) {\n         const originalData = response.data;\n"
                },
                {
                    "date": 1720080931807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,36 @@\n         img{\n             height: 100%;\n             padding: 2%;\n         }\n+        .red-text {\n+    background-color: red;\n+    color: white; /* белый текст на красном фоне */\n+    padding: 2px 5px; /* отступы вокруг текста */\n+    border-radius: 3px; /* скругление углов */\n+}\n+\n+.orange-text {\n+    background-color: orange;\n+    color: black; /* черный текст на оранжевом фоне */\n+    padding: 2px 5px;\n+    border-radius: 3px;\n+}\n+\n+.yellow-text {\n+    background-color: yellow;\n+    color: black;\n+    padding: 2px 5px;\n+    border-radius: 3px;\n+}\n+\n+.green-text {\n+    background-color: green;\n+    color: white;\n+    padding: 2px 5px;\n+    border-radius: 3px;\n+}\n+\n     </style>\n </head>\n <body>\n     <div class=\"table-wrapper\">\n@@ -52,10 +80,46 @@\n     { headerName: 'Размер', field: 'size' },\n     { headerName: 'Заказы 1м', field: 'orders1m' },\n     { headerName: 'Заказы 14 д', field: 'orders14d' },\n     { headerName: 'График продаж', field: 'salesGraph' },\n-    { headerName: 'Остаток (шт)', field: 'stock' },\n-    { headerName: 'Остаток (дн)', field: 'stockDays' },\n+    {\n+        headerName: 'Остаток (шт)',\n+        field: 'stock',\n+        cellRenderer: function(params) {\n+            const value = params.value;\n+            let className = '';\n+            if (value >= 0 && value <= 1.99) {\n+                className = 'red-text';\n+            } else if (value >= 2 && value <= 5.99) {\n+                className = 'orange-text';\n+            } else if (value >= 6 && value <= 10.99) {\n+                className = 'yellow-text';\n+            } else if (value >= 11) {\n+                className = 'green-text';\n+            }\n+\n+            return `<span class=\"${className}\">${value}</span>`;\n+        }\n+    },\n+    {\n+        headerName: 'Остаток (дн)',\n+        field: 'stockDays',\n+        cellRenderer: function(params) {\n+            const value = params.value;\n+            let className = '';\n+            if (value >= 0 && value <= 1.99) {\n+                className = 'red-text';\n+            } else if (value >= 2 && value <= 5.99) {\n+                className = 'orange-text';\n+            } else if (value >= 6 && value <= 10.99) {\n+                className = 'yellow-text';\n+            } else if (value >= 11) {\n+                className = 'green-text';\n+            }\n+\n+            return `<span class=\"${className}\">${value}</span>`;\n+        }\n+    },\n     { headerName: 'Пополнить (шт)', field: 'replenish' },\n     { headerName: 'Артикул', field: 'vendorCode' }\n ];\n \n@@ -100,9 +164,10 @@\n     data.forEach(item => {\n         item.allowed_sizes.forEach(size => {\n             let stock = item.stocks ? item.stocks[size] || 0 : 0;\n             let orders1m = item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0;\n-            let stockDays = orders1m !== 0 ? (stock / orders1m).toFixed(2) : 0; // Вычисляем stockDays, округляем до двух знаков после запятой\n+            let stockDays = orders1m !== 0 ? parseFloat((stock / orders1m).toFixed(2)) : 0;\n+            console.log(typeof(stockDays));\n \n             transformedData.push({\n                 photo: item.photos ? item.photos[0] || '' : '',\n                 subjectName: item.subjectName,\n"
                },
                {
                    "date": 1720080943747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,9 +185,31 @@\n     });\n     return transformedData;\n }\n \n+function transformData(data) {\n+    let transformedData = [];\n+    data.forEach(item => {\n+        item.allowed_sizes.forEach(size => {\n+            transformedData.push({\n+                photo: item.photos ? item.photos[0][\"c516x688\"] : '', // Убедитесь, что добавили поле photos в данные\n+                subjectName: item.subjectName,\n+                nmID: item.nmID,\n+                size: size,\n+                orders1m: item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0,\n+                orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n+                salesGraph: '',\n+                stock: item.stocks ? item.stocks[size] || 0 : 0,\n+                stockDays: '',\n+                replenish: '',\n+                vendorCode: item.vendorCode\n+            });\n+        });\n+    });\n+    return transformedData;\n+}\n \n+\n // Функция для получения данных\n function fetchData() {\n     $.getJSON('data.json', function (response) {\n         const originalData = response.data;\n"
                },
                {
                    "date": 1720080952950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,9 +168,9 @@\n             let stockDays = orders1m !== 0 ? parseFloat((stock / orders1m).toFixed(2)) : 0;\n             console.log(typeof(stockDays));\n \n             transformedData.push({\n-                photo: item.photos ? item.photos[0] || '' : '',\n+                photo: item.photos ? item.photos[0][\"c516x688\"] : ''\n                 subjectName: item.subjectName,\n                 nmID: item.nmID,\n                 size: size,\n                 orders1m: orders1m,\n"
                },
                {
                    "date": 1720080961749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -168,9 +168,9 @@\n             let stockDays = orders1m !== 0 ? parseFloat((stock / orders1m).toFixed(2)) : 0;\n             console.log(typeof(stockDays));\n \n             transformedData.push({\n-                photo: item.photos ? item.photos[0][\"c516x688\"] : ''\n+                photo: item.photos ? item.photos[0][\"c516x688\"] : '',\n                 subjectName: item.subjectName,\n                 nmID: item.nmID,\n                 size: size,\n                 orders1m: orders1m,\n@@ -185,29 +185,29 @@\n     });\n     return transformedData;\n }\n \n-function transformData(data) {\n-    let transformedData = [];\n-    data.forEach(item => {\n-        item.allowed_sizes.forEach(size => {\n-            transformedData.push({\n-                photo: item.photos ? item.photos[0][\"c516x688\"] : '', // Убедитесь, что добавили поле photos в данные\n-                subjectName: item.subjectName,\n-                nmID: item.nmID,\n-                size: size,\n-                orders1m: item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0,\n-                orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n-                salesGraph: '',\n-                stock: item.stocks ? item.stocks[size] || 0 : 0,\n-                stockDays: '',\n-                replenish: '',\n-                vendorCode: item.vendorCode\n-            });\n-        });\n-    });\n-    return transformedData;\n-}\n+// function transformData(data) {\n+//     let transformedData = [];\n+//     data.forEach(item => {\n+//         item.allowed_sizes.forEach(size => {\n+//             transformedData.push({\n+//                 photo: item.photos ? item.photos[0][\"c516x688\"] : '', // Убедитесь, что добавили поле photos в данные\n+//                 subjectName: item.subjectName,\n+//                 nmID: item.nmID,\n+//                 size: size,\n+//                 orders1m: item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0,\n+//                 orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n+//                 salesGraph: '',\n+//                 stock: item.stocks ? item.stocks[size] || 0 : 0,\n+//                 stockDays: '',\n+//                 replenish: '',\n+//                 vendorCode: item.vendorCode\n+//             });\n+//         });\n+//     });\n+//     return transformedData;\n+// }\n \n \n // Функция для получения данных\n function fetchData() {\n"
                },
                {
                    "date": 1720080972493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -185,29 +185,8 @@\n     });\n     return transformedData;\n }\n \n-// function transformData(data) {\n-//     let transformedData = [];\n-//     data.forEach(item => {\n-//         item.allowed_sizes.forEach(size => {\n-//             transformedData.push({\n-//                 photo: item.photos ? item.photos[0][\"c516x688\"] : '', // Убедитесь, что добавили поле photos в данные\n-//                 subjectName: item.subjectName,\n-//                 nmID: item.nmID,\n-//                 size: size,\n-//                 orders1m: item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0,\n-//                 orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n-//                 salesGraph: '',\n-//                 stock: item.stocks ? item.stocks[size] || 0 : 0,\n-//                 stockDays: '',\n-//                 replenish: '',\n-//                 vendorCode: item.vendorCode\n-//             });\n-//         });\n-//     });\n-//     return transformedData;\n-// }\n \n \n // Функция для получения данных\n function fetchData() {\n"
                }
            ],
            "date": 1720080864985,
            "name": "Commit-0",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/styles/ag-grid.css\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/styles/ag-theme-alpine.css\">\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css\" rel=\"stylesheet\">\n    <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.6.0/jquery.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/@ag-grid-community/core/dist/ag-grid-community.noStyle.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/ag-grid-community/dist/ag-grid-community.min.js\"></script>\n  \n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js\"></script>\n    <style>\n        img{\n            height: 100%;\n            padding: 2%;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"table-wrapper\">\n        <div class=\"headerContainer\">\n            <div class=\"input-group\">\n                <input type=\"number\" id=\"daysInput\" class=\"form-control\" placeholder=\"Введите количество дней\"\n                    aria-label=\"Введите количество дней от 15 до 45\" aria-describedby=\"basic-addon2\" min=\"15\" max=\"45\">\n                <div class=\"input-group-append\">\n                    <button class=\"btn btn-outline-secondary calculateReplenishment\" type=\"button\">Рассчитать пополнение (шт)</button>\n                </div>\n            </div>\n            <button class=\"btn btn-outline-secondary deleteModify\" type=\"button\">Показать товар без модификаций</button>\n            <button class=\"btn btn-outline-secondary reloadData\" type=\"button\">Обновить данные</button>\n        </div>\n        <div style=\"margin-bottom: 10px;\">\n            <button id=\"resetFilters\">Сбросить все фильтры</button>\n        </div>\n        <div class=\"table-inner container mt-4\">\n            <div id=\"myGrid\" class=\"ag-theme-alpine\" style=\"height: 600px; width: 100%;\"></div>\n            <div id=\"loading\" style=\"display: none;\">Загрузка...</div>\n        </div>\n    </div>\n\n    <script>\n     // Определение столбцов и параметров сетки\nconst columnDefs = [\n    { headerName: '№', valueGetter: 'node.rowIndex + 1', width: 50, sortable: false, filter: false },\n    { headerName: 'Фото', field: 'photo', cellRenderer: params => `<img src=\"${params.value}\">` },\n    { headerName: 'Предмет', field: 'subjectName' },\n    { headerName: 'Номенклатура', field: 'nmID' },\n    { headerName: 'Размер', field: 'size' },\n    { headerName: 'Заказы 1м', field: 'orders1m' },\n    { headerName: 'Заказы 14 д', field: 'orders14d' },\n    { headerName: 'График продаж', field: 'salesGraph' },\n    {\n        headerName: 'Остаток (шт)',\n        field: 'stock',\n        cellStyle: function(params) {\n            if (params.value >= 0 && params.value <= 1.99) {\n                return { backgroundColor: 'red' }; // красный цвет\n            } else if (params.value >= 2 && params.value <= 5.99) {\n                return { backgroundColor: 'orange' }; // оранжевый цвет\n            } else if (params.value >= 6 && params.value <= 10.99) {\n                return { backgroundColor: 'lightyellow' }; // светло-желтый цвет\n            } else if (params.value >= 11) {\n                return { backgroundColor: 'green' }; // зеленый цвет\n            } else {\n                return null; // стандартный стиль\n            }\n        }\n    },\n    {\n        headerName: 'Остаток (дн)',\n        field: 'stockDays',\n        cellRenderer: function(params) {\n            const value = params.value;\n            let className = '';\n            if (value >= 0 && value <= 1.99) {\n                className = 'red-text';\n            } else if (value >= 2 && value <= 5.99) {\n                className = 'orange-text';\n            } else if (value >= 6 && value <= 10.99) {\n                className = 'yellow-text';\n            } else if (value >= 11) {\n                className = 'green-text';\n            }\n\n            return `<span class=\"${className}\">${value}</span>`;\n        }\n    }\n    { headerName: 'Пополнить (шт)', field: 'replenish' },\n    { headerName: 'Артикул', field: 'vendorCode' }\n];\n\nconst localeText = {\n    // Русификация фильтров\n    page: 'страница',\n    more: 'ещё',\n    to: 'к',\n    of: 'из',\n    next: 'следующий',\n    last: 'последний',\n    first: 'первый',\n    previous: 'предыдущий',\n    loadingOoo: 'Загрузка...',\n    applyFilter: 'Применить фильтр...',\n    equals: 'Равно',\n    notEqual: 'Не равно',\n    filterOoo: 'Фильтр...',\n    contains: 'Содержит',\n    notContains: 'Не содержит',\n    startsWith: 'Начинается с',\n    endsWith: 'Заканчивается на',\n    andCondition: 'И',\n    orCondition: 'Или'\n};\n\nconst gridOptions = {\n    columnDefs: columnDefs,\n    defaultColDef: {\n        sortable: true,\n        filter: true,\n        resizable: true\n    },\n    rowData: [],\n    localeText: localeText,\n    rowHeight: 90 \n};\n\n// Функция для преобразования данных\nfunction transformData(data) {\n    let transformedData = [];\n    data.forEach(item => {\n        item.allowed_sizes.forEach(size => {\n            let stock = item.stocks ? item.stocks[size] || 0 : 0;\n            let orders1m = item[\"30midle_sales\"] ? item[\"30midle_sales\"][size] || 0 : 0;\n            let stockDays = orders1m !== 0 ? parseFloat((stock / orders1m).toFixed(2)) : 0;\n            console.log(typeof(stockDays));\n\n            transformedData.push({\n                photo: item.photos ? item.photos[0] || '' : '',\n                subjectName: item.subjectName,\n                nmID: item.nmID,\n                size: size,\n                orders1m: orders1m,\n                orders14d: item[\"14midle_sales\"] ? item[\"14midle_sales\"][size] || 0 : 0,\n                salesGraph: '',\n                stock: stock,\n                stockDays: stockDays,\n                replenish: '',\n                vendorCode: item.vendorCode\n            });\n        });\n    });\n    return transformedData;\n}\n\n\n// Функция для получения данных\nfunction fetchData() {\n    $.getJSON('data.json', function (response) {\n        const originalData = response.data;\n        const rowData = transformData(originalData);\n        console.log(rowData);\n        gridOptions.api.applyTransaction({ add: rowData });\n    }).fail(function () {\n        console.error('Ошибка при загрузке данных');\n    });\n}\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const gridDiv = document.querySelector('#myGrid');\n    new agGrid.Grid(gridDiv, gridOptions);\n\n    fetchData();\n\n    // Добавление события для кнопки сброса всех фильтров\n    document.querySelector('#resetFilters').addEventListener('click', function() {\n        gridOptions.api.setFilterModel(null);\n    });\n});\n\n\n    </script>\n</body>\n</html>\n"
        }
    ]
}